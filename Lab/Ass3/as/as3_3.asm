.MODEL SMALL
.STACK 100H
.DATA
	A DB 19H
	B DB 95H
	BASE DB 16
.CODE
MAIN PROC
	MOV AX,@DATA
	MOV DS,AX
	
	MOV BL,A    
	MOV CL,B
	MOV BH,0
	MOV CH,0
	
	MOV DX,'$'
	PUSH DX
	MOV DX,0
	
L1: CMP BL,0 ; CHECKING IF BOTH NUMBERS A AND B HAVE BECOME 0 OR NOT SO THAT WE CAN PRINT THE ANSWER
	JE L2
	JMP L3

L2: CMP CL,0
	JE PRINT
	JMP L3
	
L3: MOV DX,0

	MOV AH,0
	MOV AL,BL   
	DIV BASE
	MOV DL,AH  ;STORING THE LAST MOST NIBBLE IN DL FOR BL
	MOV BL,AL   ; UPDATING BL BY REMOVING THE LAST MOST NIBBLE FROM IT
	
	MOV AH,0
	MOV AL,CL   
	DIV BASE
	ADD DL,AH  ; STORING THE ADDITION OF BOTH THE NIBLLES
	MOV CL,AL  ; SIMILAR PROCESS FOR CL
	
	CMP DL,9   ; CHECKIING IF THE SUM > 9 OR NOT
	JG CONVERT_AND_ADD  ; IF YES THEN GO FOR THR CONVERSION PROCESS
	JMP ADD_STACK  ; OTHERWISE ADD THE NUMBER TO THE PRINTING STACK
	
CONVERT_AND_ADD: ; CONVERSION PROCESSS
	MOV AX,0      
	MOV AL,DL   
	ADD AL,6   ; ADDING 6 TO THE SUM AND THEN TAKING MODULO 16 SO THAT THE BCD PROPERTY IS MAINTAINED
	DIV BASE
	MOV DH,0
	MOV DL,AH
	ADD BL,1  ;ADDING CARRY TO ONE OF THE NUMBERS
	PUSH DX
	MOV DX,0
	JMP L1
	
ADD_STACK:
	MOV AX,0    
	MOV DH,0
	PUSH DX
	JMP L1
	
PRINT:      ; PRINTING THE FINAL BCD ADDITION ANSWER IN HEXADECIMMAL FORMAT
	POP DX
	CMP DX,'$'
	JE EXIT
	ADD DX,48
	MOV AX,0
	MOV AH,02H
	INT 21H
	JMP PRINT
	
EXIT: 
	MOV AH,4CH
	INT 21H 
	
MAIN ENDP
END MAIN